# docker-compose.yml

# run with
#  % docker compose up -d --build
# stop with
#  % docker compose down
services:
  ftp-server:
    # Use a standard amd64-compatible image for the base configuration.
    # This will be overridden for local ARM development by docker-compose.override.yml.
    image: fauria/vsftpd:latest
    container_name: image-viewer-ftp-server
    ports:
      - "21:21"
      - "20:20"
      - "21100-21110:21100-21110"
    environment:
      - FTP_USER=myuser
      - FTP_PASS=mypassword
      # Use 127.0.0.1 for local connections on Mac/Linux.
      # For external connections, replace with your host's public IP.
      - PASV_ADDRESS=127.0.0.1
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
    volumes:
      - shared_ftp_data:/home/vsftpd # Mount the named volume
    restart: always

  flask-app:
    build:
      context: ./flask_app
    container_name: image-viewer-flask-app
    ports:
      # Map host port 8080 to container port 8080 (where gunicorn listens)
      - "8080:8080"
    volumes:
      # Mount the application code for live-reloading during development
      - ./flask_app:/app
      # Mount the shared volume for FTP data
      - shared_ftp_data:/app/shared_data
    # The command is now inherited from the Dockerfile's CMD.
    # Development-specific overrides will be in docker-compose.override.yml.
    restart: always
    depends_on:
      - ftp-server # Optional: ensures ftp-server starts before flask-app, though not strictly required for volume sharing
    # Load secrets and config from an environment file
    env_file:
      - ./flask_app/.env

volumes:
  shared_ftp_data: